@model Hospital_Management.Areas.Doctor.Models.available
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "DoctorAvailableProfile"; 
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Doctor Available Profile</h1>

<h4>WELCOME, @Context.Session.GetString("name").ToUpper()</h4>
<div class="reset-password-container">
    <a asp-action="resetpassword" asp-area="Doctor" asp-controller="Doctor" class="btn btn-outline-danger">Reset Password</a>
</div>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <form asp-action="DoctorAvailableProfile">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="User_Id" class="control-label">User ID</label>
                    <input asp-for="User_Id" class="form-control" />
                    <span asp-validation-for="User_Id" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label">Name</label>
                    <input asp-for="Name" class="form-control" id="dname" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                    <input asp-for="Date" class="form-control" type="date" min="@DateTime.Now.ToString("yyyyy-mm-dd")" />
                    <span asp-validation-for="Date" class="text-danger" id="date"></span>
                </div>

                <div class="form-group">
                    <label asp-for="STime" class="control-label">Start Time</label>
                    <select asp-for="STime" class="form-control">
                        @for (int hour = 0; hour < 24; hour++)
                        {
                            <option value="@hour.ToString().PadLeft(2, '0'):00">@hour.ToString().PadLeft(2, '0'):00</option>
                        }
                    </select>
                    <span asp-validation-for="STime" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ETime" class="control-label">End Time</label>
                    <select asp-for="ETime" class="form-control">
                        @for (int hour = 0; hour < 24; hour++)
                        {
                            <option value="@hour.ToString().PadLeft(2, '0'):00">@hour.ToString().PadLeft(2, '0'):00</option>
                        }
                    </select>
                    <span asp-validation-for="ETime" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" id="submit"/>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="DoctorAvailableProfileList">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Disable past dates in the date input field
        var today = new Date().toISOString().split('T')[0];
        document.getElementById("Date").setAttribute("min", today);
        </script>
        <script>
        $('#STime,#ETime,#Date').on('change', function () {
            var date = $('#Date').val();
            var doctorName = $('#dname').val();
            var startTime = $('#STime').val();
            var endTime = $('#ETime').val();
            console.log("Doctor Name:", doctorName);

            $.ajax({
                url: '/Doctor/GetAvailableTimes',
                type: 'GET',
                data: { date: date, doctorName: doctorName, startTime: startTime, endTime: endTime },
                success: function (result) {
                    
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('An error occurred while fetching available times:', textStatus, errorThrown);
                    // Show an alert to the user if there is an error
                    alert('Error: ' + errorThrown);
                }
            });
        });
        $('#submit').on("click",function (event) {
            var date = $('#Date').val();
            var doctorName = $('#dname').val();
            var startTime = $('#STime').val();
            var endTime = $('#ETime').val();
            $.ajax({
                url: '/Doctor/GetAvailableTimes',
                type: 'GET',
                data: { date: date, doctorName: doctorName, startTime: startTime, endTime: endTime },
                success: function (result) {
                    
                    $('form').off('submit').submit();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('An error occurred while fetching available times:', textStatus, errorThrown);
                    event.preventDefault();
                    alert('Error: ' + errorThrown);
                }
            });
        });
    </script>
}

    <style>
        /* Custom CSS styles */
        .container {
            margin-top: 20px;
        }

        .reset-password-container {
            position: absolute;
            top: 10px;
            right: 10px;
        }
        
    </style>
